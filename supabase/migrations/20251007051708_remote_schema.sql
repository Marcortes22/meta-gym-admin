

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."register_request_state" AS ENUM (
    'PENDING',
    'COMPLETED',
    'EXPIRED',
    'CANCELED'
);


ALTER TYPE "public"."register_request_state" OWNER TO "postgres";


CREATE TYPE "public"."subscription_status" AS ENUM (
    'active',
    'trialing',
    'canceled'
);


ALTER TYPE "public"."subscription_status" OWNER TO "postgres";


CREATE TYPE "public"."theme" AS ENUM (
    'blue',
    'red',
    'orange',
    'yellow'
);


ALTER TYPE "public"."theme" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."attendance" (
    "id" bigint NOT NULL,
    "date" "date" NOT NULL,
    "arrival_time" time without time zone,
    "departure_time" time without time zone,
    "user_id" "uuid" DEFAULT "gen_random_uuid"()
);


ALTER TABLE "public"."attendance" OWNER TO "postgres";


ALTER TABLE "public"."attendance" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."attendance_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."gym_plans" (
    "id" bigint NOT NULL,
    "name" "text",
    "price" "text",
    "description" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp without time zone,
    "tenant_id" bigint,
    "gym_id" bigint
);


ALTER TABLE "public"."gym_plans" OWNER TO "postgres";


ALTER TABLE "public"."gym_plans" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."gym_pan_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."gyms" (
    "id" bigint NOT NULL,
    "tenant_id" bigint,
    "name" "text",
    "address" "text",
    "theme" "public"."theme",
    "email" "text",
    "logo_url" "text",
    "slug" "text",
    "schedule" "jsonb"[]
);


ALTER TABLE "public"."gyms" OWNER TO "postgres";


ALTER TABLE "public"."gyms" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."gyns_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."platform_config" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" character varying(255) NOT NULL,
    "phone" character varying(20),
    "email" "text"
);


ALTER TABLE "public"."platform_config" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."platform_plans" (
    "id" bigint NOT NULL,
    "name" "text",
    "price" double precision,
    "max_clients" integer,
    "description" "text",
    "features" "text"[],
    "is_active" boolean DEFAULT true,
    "platform_config_id" "uuid" DEFAULT "gen_random_uuid"()
);


ALTER TABLE "public"."platform_plans" OWNER TO "postgres";


ALTER TABLE "public"."platform_plans" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."platform_pla_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."register_request" (
    "id" bigint NOT NULL,
    "name" "text",
    "email" "text",
    "date" "date" DEFAULT ("now"())::"date",
    "state" "public"."register_request_state" DEFAULT 'PENDING'::"public"."register_request_state",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "tenant_id" bigint,
    "tenant_name" "text"
);


ALTER TABLE "public"."register_request" OWNER TO "postgres";


ALTER TABLE "public"."register_request" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."register_request_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."register_tokens" (
    "id" bigint NOT NULL,
    "token_has" "uuid" DEFAULT "gen_random_uuid"(),
    "expiration_date" "date",
    "use_date" "date",
    "used" boolean DEFAULT false,
    "register_request_id" bigint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);


ALTER TABLE "public"."register_tokens" OWNER TO "postgres";


ALTER TABLE "public"."register_tokens" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."register_tokens_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."roles" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL
);


ALTER TABLE "public"."roles" OWNER TO "postgres";


ALTER TABLE "public"."roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."tenants" (
    "id" bigint NOT NULL,
    "code" "text",
    "is_active" boolean DEFAULT true,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);


ALTER TABLE "public"."tenants" OWNER TO "postgres";


ALTER TABLE "public"."tenants" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."tenant_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."tenant_suscriptions" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "start_date" "date" DEFAULT CURRENT_DATE NOT NULL,
    "end_date" "date",
    "is_current" boolean DEFAULT true,
    "status" "public"."subscription_status",
    "tenant_id" bigint,
    "platform_plan_id" bigint
);


ALTER TABLE "public"."tenant_suscriptions" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."user_suscriptions" (
    "id" bigint NOT NULL,
    "start_date" "date",
    "end_date" "date",
    "is_current" boolean DEFAULT true,
    "gym_plan_id" bigint,
    "user_id" "uuid" DEFAULT "gen_random_uuid"(),
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp without time zone
);


ALTER TABLE "public"."user_suscriptions" OWNER TO "postgres";


ALTER TABLE "public"."user_suscriptions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user_suscriptions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."users" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "user_id" bigint,
    "name" "text",
    "email" "text",
    "date_of_birth" "date",
    "measurements" "jsonb"[],
    "tenant_id" bigint,
    "gym_id" bigint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "is_authenticated" boolean,
    "last_name" "text",
    "role_id" bigint,
    "hiring_date" "date",
    "phone" "text"
);


ALTER TABLE "public"."users" OWNER TO "postgres";


COMMENT ON COLUMN "public"."users"."phone" IS 'Numero de telefono del usuario';



ALTER TABLE ONLY "public"."attendance"
    ADD CONSTRAINT "attendance_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."gym_plans"
    ADD CONSTRAINT "gym_pan_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."gym_plans"
    ADD CONSTRAINT "gym_pan_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."gyms"
    ADD CONSTRAINT "gyns_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."gyms"
    ADD CONSTRAINT "gyns_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."platform_config"
    ADD CONSTRAINT "meta_gym_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."platform_plans"
    ADD CONSTRAINT "platform_pla_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."register_request"
    ADD CONSTRAINT "register_request_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."register_tokens"
    ADD CONSTRAINT "register_tokens_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."roles"
    ADD CONSTRAINT "roles_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tenants"
    ADD CONSTRAINT "tenant_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."tenant_suscriptions"
    ADD CONSTRAINT "tenant_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tenants"
    ADD CONSTRAINT "tenant_pkey1" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."user_suscriptions"
    ADD CONSTRAINT "user_suscriptions_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."attendance"
    ADD CONSTRAINT "attendance_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id");



ALTER TABLE ONLY "public"."gym_plans"
    ADD CONSTRAINT "gym_plans_gym_id_fkey" FOREIGN KEY ("gym_id") REFERENCES "public"."gyms"("id");



ALTER TABLE ONLY "public"."gyms"
    ADD CONSTRAINT "gyms_tenant_id_fkey" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id");



ALTER TABLE ONLY "public"."platform_plans"
    ADD CONSTRAINT "platform_pla_platform_config_id_fkey" FOREIGN KEY ("platform_config_id") REFERENCES "public"."platform_config"("id");



ALTER TABLE ONLY "public"."register_request"
    ADD CONSTRAINT "register_request_tenant_id_fkey" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id");



ALTER TABLE ONLY "public"."register_tokens"
    ADD CONSTRAINT "register_tokens_register_request_id_fkey" FOREIGN KEY ("register_request_id") REFERENCES "public"."register_request"("id");



ALTER TABLE ONLY "public"."tenant_suscriptions"
    ADD CONSTRAINT "tenant_suscriptions_platform_plan_id_fkey" FOREIGN KEY ("platform_plan_id") REFERENCES "public"."platform_plans"("id");



ALTER TABLE ONLY "public"."tenant_suscriptions"
    ADD CONSTRAINT "tenant_suscriptions_tenant_id_fkey" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id");



ALTER TABLE ONLY "public"."user_suscriptions"
    ADD CONSTRAINT "user_suscriptions_gym_plan_id_fkey" FOREIGN KEY ("gym_plan_id") REFERENCES "public"."gym_plans"("id");



ALTER TABLE ONLY "public"."user_suscriptions"
    ADD CONSTRAINT "user_suscriptions_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_gym_id_fkey" FOREIGN KEY ("gym_id") REFERENCES "public"."gyms"("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_role_id_fkey" FOREIGN KEY ("role_id") REFERENCES "public"."roles"("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_tenant_id_fkey" FOREIGN KEY ("tenant_id") REFERENCES "public"."tenants"("id");



ALTER TABLE "public"."attendance" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."gym_plans" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."gyms" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."platform_plans" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."register_tokens" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."roles" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."tenants" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."user_suscriptions" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."users" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";








































































































































































GRANT ALL ON TABLE "public"."attendance" TO "anon";
GRANT ALL ON TABLE "public"."attendance" TO "authenticated";
GRANT ALL ON TABLE "public"."attendance" TO "service_role";



GRANT ALL ON SEQUENCE "public"."attendance_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."attendance_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."attendance_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."gym_plans" TO "anon";
GRANT ALL ON TABLE "public"."gym_plans" TO "authenticated";
GRANT ALL ON TABLE "public"."gym_plans" TO "service_role";



GRANT ALL ON SEQUENCE "public"."gym_pan_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."gym_pan_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."gym_pan_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."gyms" TO "anon";
GRANT ALL ON TABLE "public"."gyms" TO "authenticated";
GRANT ALL ON TABLE "public"."gyms" TO "service_role";



GRANT ALL ON SEQUENCE "public"."gyns_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."gyns_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."gyns_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."platform_config" TO "anon";
GRANT ALL ON TABLE "public"."platform_config" TO "authenticated";
GRANT ALL ON TABLE "public"."platform_config" TO "service_role";



GRANT ALL ON TABLE "public"."platform_plans" TO "anon";
GRANT ALL ON TABLE "public"."platform_plans" TO "authenticated";
GRANT ALL ON TABLE "public"."platform_plans" TO "service_role";



GRANT ALL ON SEQUENCE "public"."platform_pla_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."platform_pla_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."platform_pla_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."register_request" TO "anon";
GRANT ALL ON TABLE "public"."register_request" TO "authenticated";
GRANT ALL ON TABLE "public"."register_request" TO "service_role";



GRANT ALL ON SEQUENCE "public"."register_request_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."register_request_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."register_request_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."register_tokens" TO "anon";
GRANT ALL ON TABLE "public"."register_tokens" TO "authenticated";
GRANT ALL ON TABLE "public"."register_tokens" TO "service_role";



GRANT ALL ON SEQUENCE "public"."register_tokens_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."register_tokens_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."register_tokens_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."roles" TO "anon";
GRANT ALL ON TABLE "public"."roles" TO "authenticated";
GRANT ALL ON TABLE "public"."roles" TO "service_role";



GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."tenants" TO "anon";
GRANT ALL ON TABLE "public"."tenants" TO "authenticated";
GRANT ALL ON TABLE "public"."tenants" TO "service_role";



GRANT ALL ON SEQUENCE "public"."tenant_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."tenant_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."tenant_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."tenant_suscriptions" TO "anon";
GRANT ALL ON TABLE "public"."tenant_suscriptions" TO "authenticated";
GRANT ALL ON TABLE "public"."tenant_suscriptions" TO "service_role";



GRANT ALL ON TABLE "public"."user_suscriptions" TO "anon";
GRANT ALL ON TABLE "public"."user_suscriptions" TO "authenticated";
GRANT ALL ON TABLE "public"."user_suscriptions" TO "service_role";



GRANT ALL ON SEQUENCE "public"."user_suscriptions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user_suscriptions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user_suscriptions_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;

